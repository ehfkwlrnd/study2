#include <iostream>
using namespace std;

int N, S, D, F, B, K;
int pos[101][101];
bool police[101];

int main()
{
	cin >> N >> S >> D >> F >> B >> K;
	
	pos[1][1] = S;
	for(int i = 0; i <= N; i++) {
		pos[i][0] = pos[0][i] = -1;
	}

	for(int i = 0 ; i < K; i++) {
		int p;
		cin >> p;
		police[p] = true;
	}
	
	for(int i = 2; i <= N; i++){
		for(int j = 1; j <= i; j++){
			int set; //pos[j][i-j+1]의 값을 설정하는 것이 목표 
			if(pos[j-1][i-j+1] != -1){
				set = pos[j-1][i-j+1] - B;
			}
			else if(pos[j][i-j] != -1){
				set = pos[j][i-j] + F;
			}
			else{
				set = -1;
			}
			if(set <= 0 || set > N || police[set]){
				set = -1;
			}
			if(set == D){
				cout << (i-1);
				return 0;
			}
			pos[j][i-j+1] = set;
		}
	}
	printf("BUG FOUND\n");
}

/*
20 1 20 2 1 4
5 10 15 19

 1  3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  0  0  0  0  0
-1  2  4  6  8 -1 -1 -1 -1 -1 -1 -1 -1 -1  0  0  0  0  0  0
-1  1  3 -1  7  9 11 13 -1 -1 -1 -1 -1  0  0  0  0  0  0  0
-1 -1  2  4  6  8 -1 12 14 16 18  0  0  0  0  0  0  0  0  0
-1 -1  1  3 -1  7  9 11 13 -1  0  0  0  0  0  0  0  0  0  0
-1 -1 -1  2  4  6  8 -1 12  0  0  0  0  0  0  0  0  0  0  0
-1 -1 -1  1  3 -1  7  9  0  0  0  0  0  0  0  0  0  0  0  0
-1 -1 -1 -1  2  4  6  0  0  0  0  0  0  0  0  0  0  0  0  0
-1 -1 -1 -1  1  3  0  0  0  0  0  0  0  0  0  0  0  0  0  0
-1 -1 -1 -1 -1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
-1 -1 -1 -1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
-1 -1 -1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
-1 -1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
-1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
 
20 1 20 2 1 3
5 6 9

 1  3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
-1  2  4 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  0
-1  1  3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  0  0
-1 -1  2  4 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  0  0  0
-1 -1  1  3 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  0  0  0  0
-1 -1 -1  2  4 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  0  0  0  0  0
-1 -1 -1  1  3 -1 -1 -1 -1 -1 -1 -1 -1 -1  0  0  0  0  0  0
-1 -1 -1 -1  2  4 -1 -1 -1 -1 -1 -1 -1  0  0  0  0  0  0  0
-1 -1 -1 -1  1  3 -1 -1 -1 -1 -1 -1  0  0  0  0  0  0  0  0
-1 -1 -1 -1 -1  2  4 -1 -1 -1 -1  0  0  0  0  0  0  0  0  0
-1 -1 -1 -1 -1  1  3 -1 -1 -1  0  0  0  0  0  0  0  0  0  0
-1 -1 -1 -1 -1 -1  2  4 -1  0  0  0  0  0  0  0  0  0  0  0
-1 -1 -1 -1 -1 -1  1  3  0  0  0  0  0  0  0  0  0  0  0  0
-1 -1 -1 -1 -1 -1 -1  0  0  0  0  0  0  0  0  0  0  0  0  0
-1 -1 -1 -1 -1 -1  0  0  0  0  0  0  0  0  0  0  0  0  0  0
-1 -1 -1 -1 -1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
-1 -1 -1 -1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
-1 -1 -1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
-1 -1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
 */
